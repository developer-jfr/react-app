{"version":3,"sources":["pages/Chat/ChatPage.tsx"],"names":["ws","WebSocket","Chat","Messages","AddMessageForm","useState","messages","setMessages","useEffect","addEventListener","e","newMessage","JSON","parse","data","prevMesssages","style","height","overflowY","map","m","index","Message","message","src","photo","userName","setMessage","setReady","openHandler","removeEventListener","close","marginTop","onChange","currentTarget","value","onClick","send","ChatPage"],"mappings":"gKAMMA,EAAK,IAAIC,UAAU,gEAYnBC,EAAiB,WACrB,OACM,gCACA,cAACC,EAAD,IACA,cAACC,EAAD,QAIFD,EAAsB,WACxB,MAAgCE,mBAAyB,IAAzD,mBAAOC,EAAP,KAAiBC,EAAjB,KAYJ,OATAC,qBAAW,WAEPR,EAAGS,iBAAiB,WAAW,SAACC,GAC5B,IAAIC,EAAaC,KAAKC,MAAMH,EAAEI,MAE9BP,GAAY,SAACQ,GAAD,4BAAuBA,GAAvB,YAAyCJ,YAE1D,IAGK,qBAAMK,MAAS,CAACC,OAAQ,QAAUC,UAAY,QAA9C,SAEKZ,EAASa,KAAK,SAACC,EAAGC,GAAJ,OAAc,cAACC,EAAD,CAAuBC,QAAWH,GAAlBC,SAInDC,EAA8C,SAAC,GAAe,IAAdC,EAAa,EAAbA,QAElD,OACI,gCACR,qBAAKC,IAAOD,EAAQE,QADZ,IACsB,4BAAIF,EAAQG,WAC1C,uBACCH,EAAQA,QACT,2BAKMnB,EAA4B,WAC9B,MAA8BC,mBAAS,IAAvC,mBAAOkB,EAAP,KAAgBI,EAAhB,KACA,EAA0BtB,mBAA+B,WAAzD,mBAAcuB,GAAd,WAEApB,qBAAW,WACP,IAAMqB,EAAc,WAChBD,EAAS,UAId,OADE,OAAF5B,QAAE,IAAFA,KAAIS,iBAAiB,OAASoB,GACvB,WACH7B,EAAG8B,oBAAoB,OAASD,GAChC7B,EAAG+B,WAEP,CAAC/B,IAWJ,OAAO,sBAAKgB,MAAO,CAACgB,UAAW,QAAxB,UACC,8BACI,0BAAUC,SAAY,SAACvB,GAAD,OAAOiB,EAAWjB,EAAEwB,cAAcC,QAAQA,MAASZ,MAE7E,8BACI,cAAC,IAAD,CAAQa,QAdA,WACZb,IAGJvB,EAAGqC,KAAKd,GACRI,EAAW,MASH,wBAMDW,UAtFc,WACzB,OACI,8BACI,cAACpC,EAAD","file":"static/js/5.f135e0d9.chunk.js","sourcesContent":["import { Button } from 'antd'\r\nimport { connect } from 'formik'\r\nimport React, { useEffect, useState } from 'react'\r\nimport { ChatPageType } from '../../api/chat-api'\r\n\r\n\r\nconst ws = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx')\r\n\r\n const ChatPage : React.FC = () => {\r\n    return (\r\n        <div>\r\n            <Chat />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst Chat: React.FC = () => {\r\n  return (\r\n        <div>\r\n        <Messages />\r\n        <AddMessageForm  />\r\n        </div>\r\n    )\r\n}\r\nconst Messages : React.FC = () => {\r\n    const [messages, setMessages] = useState<ChatPageType[]>([])\r\n    \r\n\r\nuseEffect( () => {\r\n   \r\n    ws.addEventListener('message', (e: any) => {\r\n        let newMessage = JSON.parse(e.data)\r\n       // @ts-ignore \r\n        setMessages((prevMesssages) => [...prevMesssages, ...newMessage])\r\n    })\r\n}, [])\r\n\r\nreturn (\r\n        <div  style = {{height: '400px' , overflowY : 'auto'}}>\r\n            \r\n            {messages.map( (m, index) => <Message key = {index} message = {m} />)}\r\n        </div>\r\n    )\r\n}\r\nconst Message: React.FC <{message: ChatPageType}> = ({message}) => {\r\n  \r\n    return (\r\n        <div>\r\n<img src = {message.photo} /> <b>{message.userName}</b>\r\n<br />\r\n{message.message}\r\n<hr />\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm : React.FC = () => {\r\n    const [message, setMessage] = useState('')\r\n    const [ready, setReady] = useState<'ready' | 'pending'> ('pending')\r\n\r\n    useEffect( () => {\r\n        const openHandler = () => {\r\n            setReady('ready') \r\n        }\r\n            \r\n       ws?.addEventListener('open' , openHandler)\r\n       return () => {\r\n           ws.removeEventListener('open' , openHandler)\r\n           ws.close()\r\n       }\r\n    }, [ws]) \r\n    \r\n    const sendMessage = () => {\r\n        if(!message) {\r\n            return\r\n        }\r\n        ws.send(message)\r\n        setMessage('')\r\n    }\r\n  \r\n\r\n    return <div style={{marginTop: '10px'}}>\r\n            <div>\r\n                <textarea onChange = {(e) => setMessage(e.currentTarget.value)} value = {message} ></textarea>\r\n            </div>\r\n            <div>\r\n                <Button onClick = {sendMessage}  >Send</Button>\r\n            </div>\r\n        </div>\r\n       \r\n    \r\n}\r\nexport default ChatPage"],"sourceRoot":""}